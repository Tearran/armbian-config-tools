#!/bin/bash

tput init
#
# Language-based variable assignment for script directory path
# This serves as a Rosetta Stone for developers,
# allowing them to use the variable name they are most comfortable with.

# allows CTRL c to exit
trap "exit" INT TERM

# Get the script directory
SCRIPT_DIR="$(dirname "$0")"
script_dir="$SCRIPT_DIR"

# Define the lib directory one level up from the script directory
LIB_DIR="$SCRIPT_DIR/../lib/armbian-config"
lib_dir="$LIB_DIR"

DOC_DIR="$SCRIPT_DIR/../share/doc/armbian-config"

JSON_FILE="$LIB_DIR/config.jobs.json"

json_file="$JSON_FILE"
json_data="$JSON_DATA"

JSON_DATA=$(jq '
    walk(
        # Process only objects
        if type == "object" then
            # Check if the object has a "status" key and if "status" is "Disabled"
            if has("status") and .status == "Disabled" then
                empty  # Exclude this object from the output
            else
                .  # Otherwise, keep the object as it is
            end
        else
            .  # For non-object elements, leave them unchanged
        end
    )
' "$JSON_FILE")

#
# 'whiptail' is a simple dialog box utility that works well with Bash. It doesn't have all the features of some other dialog box utilities, but it does everything we need for this script.
DIALOG="whiptail"
#
# Prepare the module options array
declare -A module_options

#
# Load configng core functions and module options array


source "$LIB_DIR/config.interface.sh"
source "$LIB_DIR/config.functions.sh"
source "$LIB_DIR/config.runtime.sh"

case "$1" in
"--help")

	if [[ -n "$2" ]]; then
		see_cmd_list "$2"
		echo ""
		exit 0
	fi

	echo "Usage:  armbian-configng --[option]
     Options:
     --help [catagory]   Use [catagory] to filter specific menu options.
     --cmd  [option]     Run a command from the menu (simple)
     --api  [option]     Run a helper command        (advanced)
     --doc               Generate the README.md file 

     Examples:
     armbian-configng --help [cmd||System||Software||Network||Localisation]
     armbian-configng --cmd help 
     armbian-configng --api help
"
	exit 0
	;;
"--cmd")
	INPUTMODE="cmd"
	if [[ $EUID != 0 ]]; then
		exec sudo -E "$0" "$@"
		exit 0
	fi

	shift
	if [[ -z "$1" || "$1" == "help" ]]; then
		see_cmd_list
		exit 0
	fi

	args=$(sanitize_input "$@")
	execute_command "$args"
	exit 0
	;;
"--api")
	if [[ $EUID != 0 ]]; then
		exec sudo -E "$0" "$@"
		exit 0
	fi
	shift
	if [[ -z "$1" || "$1" == "help" ]]; then
		see_use
		exit 0
	fi
	option="$1"
	shift
	args=$(sanitize_input "$@")
	"$option" "$args"
	exit 0
	;;
*)
	if [[ $EUID != 0 ]]; then
		exec sudo -E "$0" "$@"
		exit 0
	fi

	;;
esac

#
# Generate the top menu with the modified Object data

generate_top_menu "$JSON_DATA"



#
# Exit the script with a success status code
exit 0

